{"version":3,"file":"static/js/155.c41253b8.chunk.js","mappings":"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","sources":["pages/Movie/Movie.styled.jsx","pages/Movie/Movie.jsx","services/baseURL.js","services/getFetch.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const GeneralBox = styled.ul`\n  padding: 15px;\n  gap: 10px;\n  margin-bottom: 65px;\n  width: 100%;\n`;\n\nexport const FilmsName = styled.h1`\n  padding-bottom: 5px;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 25px;\n  letter-spacing: 0.03em;\n  color: #382aff;\n`;\n\nexport const Year = styled.p`\n  padding-bottom: 5px;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 25px;\n  letter-spacing: 0.03em;\n  padding-left: 10px;\n  color: #382aff;\n`;\n\nexport const TitelBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const FilmBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 25px;\n  margin-top: 15px;\n  width: 100%;\n`;\n\nexport const InformBox = styled.div`\n  margin-left: 20px;\n  margin-right: 20px;\n  width: 50%;\n`;\n\nexport const Span = styled.span`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  text-align: center;\n  letter-spacing: 0.03em;\n  margin-right: 5px;\n`;\n\nexport const Paragraph = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const ListAbout = styled.ul`\n  margin-top: 15px;\n  margin-bottom: 15px;\n  display: flex;\n  gap: 5px;\n`;\n\nexport const Links = styled(NavLink)`\n  color: #ffaebb;\n  padding: 5px;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 15px;\n  text-align: center;\n  letter-spacing: 0.03em;\n\n  &.active {\n    color: #382aff;\n    background-color: #ffaebb;\n    border-radius: 8px;\n  }\n`;\n\nexport const BackButton = styled(Link)`\n  padding: 10px;\n  font-size: 12px;\n  color: #382aff;\n  border: 0px;\n  background-color: #ffaebb;\n  border-radius: 8px;\n  margin-left: 25px;\n  font-weight: 400;\n`;\n\nexport const Image = styled.img`\n  width: 500px;\n  height: auto;\n`;\n","import { useEffect, useState } from 'react';\nimport { Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport noMoviePhoto from '../../images/noMoviePhoto.png';\nimport { getMovieById } from '../../services/getFetch';\nimport {\n  GeneralBox,\n  FilmsName,\n  TitelBox,\n  Year,\n  FilmBox,\n  InformBox,\n  Span,\n  Paragraph,\n  Links,\n  ListAbout,\n  BackButton,\n  Image,\n} from './Movie.styled';\n\nimport Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  width: '420px',\n  position: 'center-top',\n  distance: '100px',\n  timeout: 2000,\n  fontSize: '20px',\n});\n\nconst Movie = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState({});\n  const [flag, setFlag] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        getMovieById(id).then(data => {\n          setMovie(data);\n          setFlag(true);\n        });\n      } catch (err) {\n        Notiflix.Notify.failure(err);\n      }\n    }\n    getMovie();\n  }, [id]);\n\n  const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n  const IMG_URL = `${IMAGE_BASE_URL}${movie.backdrop_path}`;\n\n  if (flag) {\n    const { original_title, release_date, vote_average, overview, genres } =\n      movie;\n    return (\n      <GeneralBox>\n        <BackButton to={location.state.from}>Go back</BackButton>\n        <FilmBox>\n          <Image\n            src={movie.backdrop_path ? IMG_URL : noMoviePhoto}\n            alt={original_title}\n          />\n          <InformBox>\n            <TitelBox>\n              <FilmsName>{original_title}</FilmsName>\n              <Year>({release_date.slice(0, 4)})</Year>\n            </TitelBox>\n            <Paragraph>\n              <Span>Rating:</Span>\n              {vote_average.toFixed(1)}\n            </Paragraph>\n            <Paragraph>\n              <Span>Overview:</Span>\n              {overview}\n            </Paragraph>\n            <Paragraph>\n              <Span>Genres:</Span>\n              {Object.values(genres.map(genre => genre.name)).join(', ')}\n            </Paragraph>\n            <ListAbout>\n              <li>\n                <Links to=\"cast\" state={{ from: location.state.from }}>\n                  Cast\n                </Links>\n              </li>\n              <li>\n                <Links to=\"reviews\" state={{ from: location.state.from }}>\n                  Reviews\n                </Links>\n              </li>\n            </ListAbout>\n          </InformBox>\n        </FilmBox>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </GeneralBox>\n    );\n  }\n};\n\nexport default Movie;\n","export const KEY_API = 'db72402e2e89e57b99e88c265b440972';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n","import axios from 'axios';\nimport { KEY_API, BASE_URL } from './baseURL';\n\n// *************GET POPULAR MOVIES****************\nexport async function getPopularFilms() {\n  const response =\n    await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY_API}\n`);\n  return response.data;\n}\n\n// *************GET BY USER PARAMS****************\nexport async function getMovies(searchParams) {\n  const response =\n    await axios.get(`${BASE_URL}/search/movie?api_key=${KEY_API}&page=1&query=${searchParams}\n`);\n  return response.data;\n}\n\n// *************GET BY ID****************\nexport async function getMovieById(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY_API}\n`);\n  return response.data;\n}\n\n// *************GET CAST****************\nexport async function getCast(id) {\n  const response =\n    await axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${KEY_API}\n`);\n  return response.data;\n}\n\n// *************GET REVIEWS ****************\nexport async function getReviews(id) {\n  const response =\n    await axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY_API}\n`);\n  return response.data;\n}\n"],"names":["GeneralBox","styled","FilmsName","Year","TitelBox","FilmBox","InformBox","Span","Paragraph","ListAbout","Links","NavLink","BackButton","Link","Image","Notiflix","width","position","distance","timeout","fontSize","id","useParams","useState","movie","setMovie","flag","setFlag","location","useLocation","useEffect","getMovieById","then","data","err","getMovie","IMG_URL","backdrop_path","original_title","release_date","vote_average","overview","genres","to","state","from","src","noMoviePhoto","alt","slice","toFixed","Object","values","map","genre","name","join","Suspense","fallback","KEY_API","BASE_URL","getPopularFilms","axios","response","getMovies","searchParams","getCast","getReviews"],"sourceRoot":""}
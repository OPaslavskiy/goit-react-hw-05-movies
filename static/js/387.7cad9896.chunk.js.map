{"version":3,"file":"static/js/387.7cad9896.chunk.js","mappings":"0RAEaA,EAAcC,EAAAA,GAAAA,GAAH,mMAWXC,EAAcD,EAAAA,GAAAA,GAAH,wCAIXE,EAASF,EAAAA,GAAAA,EAAH,mVAiBNG,EAAWH,EAAAA,GAAAA,EAAH,8CAIRI,EAAYJ,EAAAA,GAAAA,EAAH,oF,4BC1BtBK,IAAAA,OAAAA,KAAqB,CACnBC,MAAO,QACPC,SAAU,aACVC,SAAU,QACVC,QAAS,IACTC,SAAU,SAGZ,IAwCA,EAxCgB,WACd,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwBF,EAAAA,EAAAA,WAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KAgBA,IAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8EACE,KACEC,EAAAA,EAAAA,IAAWR,GAAIS,MAAK,SAAAC,GAClBN,EAAWM,EAAKC,SAChBL,GAAQ,EACT,GAGF,CAFC,MAAOM,GACPlB,IAAAA,OAAAA,QAAwBkB,EACzB,CARH,4CADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACb,IAEAK,EACF,OACE,SAACjB,EAAD,UACGe,EAAQW,OAAS,EAChBX,EAAQY,KAAI,SAAAC,GAAM,OAChB,UAAC1B,EAAD,YACE,SAACC,EAAD,UAASyB,EAAOC,UAEhB,SAACzB,EAAD,UAAWwB,EAAOE,YAHFF,EAAOC,OADT,KAQlB,SAACxB,EAAD,mEAOT,C,mMC1DY0B,EAAU,mCACVC,EAAW,gCCGjB,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGAEGC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sCAAmDD,EAAnD,OAFH,cACCI,EADD,yBAIEA,EAASb,MAJX,kEAQA,SAAec,EAAtB,kC,aAAO,O,oBAAA,WAAyBC,GAAzB,uFAEGH,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iCAA8CD,EAA9C,yBAAsEM,EAAtE,OAFH,cACCF,EADD,yBAIEA,EAASb,MAJX,kEAQA,SAAegB,EAAtB,kC,aAAO,O,oBAAA,WAA4B1B,GAA5B,uFACkBsB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BpB,EAA/B,oBAA6CmB,EAA7C,OADlB,cACCI,EADD,yBAGEA,EAASb,MAHX,kEAOA,SAAeiB,EAAtB,kC,aAAO,O,oBAAA,WAAuB3B,GAAvB,uFAEGsB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BpB,EAA/B,4BAAqDmB,EAArD,OAFH,cACCI,EADD,yBAIEA,EAASb,MAJX,kEAQA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA0BR,GAA1B,uFAEGsB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BpB,EAA/B,4BAAqDmB,EAArD,OAFH,cACCI,EADD,yBAIEA,EAASb,MAJX,kE","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/baseURL.js","services/getFetch.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  justify-content: flex-start;\n  padding: 25px;\n  margin-right: 35px;\n  margin-left: 10px;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-bottom: 65px;\n`;\n\nexport const ReviewsItem = styled.li`\n  width: 100%;\n`;\n\nexport const Author = styled.p`\n  display: flex;\n  width: 40%;\n  background-color: #a8daf7;\n  padding: 8px;\n  padding-left: 25px;\n  margin-bottom: 10px;\n  margin-top: 20px;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  letter-spacing: 0.03em;\n  margin-left: 5px;\n  color: #382aff;\n  border-bottom-left-radius: 15px;\n`;\n\nexport const Response = styled.p`\n  margin-left: 25px;\n`;\n\nexport const NoReviews = styled.p`\n  color: #382aff;\n  font-weight: 600;\n  font-size: 16px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getReviews } from '../../services/getFetch';\nimport {\n  ReviewsList,\n  Author,\n  Response,\n  ReviewsItem,\n  NoReviews,\n} from './Reviews.styled';\n\nimport Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  width: '420px',\n  position: 'center-top',\n  distance: '100px',\n  timeout: 2000,\n  fontSize: '20px',\n});\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [flag, setFlag] = useState(false);\n\n  useEffect(() => {\n    async function getCasts() {\n      try {\n        getReviews(id).then(data => {\n          setReviews(data.results);\n          setFlag(true);\n        });\n      } catch (err) {\n        Notiflix.Notify.failure(err);\n      }\n    }\n    getCasts();\n  }, [id]);\n\n  if (flag) {\n    return (\n      <ReviewsList>\n        {reviews.length > 0 ? (\n          reviews.map(review => (\n            <ReviewsItem key={review.author}>\n              <Author>{review.author}</Author>\n\n              <Response>{review.content}</Response>\n            </ReviewsItem>\n          ))\n        ) : (\n          <NoReviews>\n            Sorry, but there are no reviews for this movie yet.\n          </NoReviews>\n        )}\n      </ReviewsList>\n    );\n  }\n};\n\nexport default Reviews;\n","export const KEY_API = 'db72402e2e89e57b99e88c265b440972';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n","import axios from 'axios';\nimport { KEY_API, BASE_URL } from './baseURL';\n\n// *************GET POPULAR MOVIES****************\nexport async function getPopularFilms() {\n  const response =\n    await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY_API}\n`);\n  return response.data;\n}\n\n// *************GET BY USER PARAMS****************\nexport async function getMovies(searchParams) {\n  const response =\n    await axios.get(`${BASE_URL}/search/movie?api_key=${KEY_API}&page=1&query=${searchParams}\n`);\n  return response.data;\n}\n\n// *************GET BY ID****************\nexport async function getMovieById(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY_API}\n`);\n  return response.data;\n}\n\n// *************GET CAST****************\nexport async function getCast(id) {\n  const response =\n    await axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${KEY_API}\n`);\n  return response.data;\n}\n\n// *************GET REVIEWS ****************\nexport async function getReviews(id) {\n  const response =\n    await axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY_API}\n`);\n  return response.data;\n}\n"],"names":["ReviewsList","styled","ReviewsItem","Author","Response","NoReviews","Notiflix","width","position","distance","timeout","fontSize","id","useParams","useState","reviews","setReviews","flag","setFlag","useEffect","getReviews","then","data","results","err","getCasts","length","map","review","author","content","KEY_API","BASE_URL","getPopularFilms","axios","response","getMovies","searchParams","getMovieById","getCast"],"sourceRoot":""}
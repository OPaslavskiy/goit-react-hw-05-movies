{"version":3,"file":"static/js/691.f0ae3b9a.chunk.js","mappings":"uQAEaA,EAAkBC,EAAAA,GAAAA,GAAH,uKAUfC,EAAkBD,EAAAA,GAAAA,GAAH,4qBAkCfE,EAAaF,EAAAA,GAAAA,OAAH,qNAYVG,EAAOH,EAAAA,GAAAA,KAAH,8GAOJI,EAAYJ,EAAAA,GAAAA,MAAH,sf,4BCrDtBK,IAAAA,OAAAA,KAAqB,CACnBC,MAAO,QACPC,SAAU,aACVC,SAAU,QACVC,QAAS,IACTC,SAAU,SAGZ,IAgEA,EAhEe,WACb,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwBF,EAAAA,EAAAA,WAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACMC,EAAQP,EAAaQ,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MAiCjB,OAzBAC,EAAAA,EAAAA,YAAU,WAoBJJ,IAlBFK,EAAAA,EAAAA,IAAUL,GACPM,MAAK,SAAAC,GACJV,EAAeU,EAAKC,SACpBT,GAAQ,GACJQ,EAAKC,QAAQC,OAAS,EACxBvB,IAAAA,OAAAA,QAAA,0DAIAA,IAAAA,OAAAA,QACE,8CAGL,IACAwB,OAAM,SAAAC,GACLzB,IAAAA,OAAAA,QAAwByB,EACzB,GAKN,GAAE,CAACX,KAGF,4BACE,UAAChB,EAAD,CAAM4B,SAjCS,SAAAC,GACjBA,EAAEC,iBACFpB,EAAgB,CAAEM,MAAOa,EAAEE,OAAOf,MAAMgB,QACxCH,EAAEE,OAAOE,OACV,EA6BG,WACE,SAAChC,EAAD,CAAWiC,aAAa,MAAMC,KAAK,QAAQC,KAAK,OAAOC,WAAS,KAChE,SAACtC,EAAD,CAAYqC,KAAK,SAAjB,wBAGF,0BACItB,GAAQF,EAAYa,QAAU,GAC9B,SAAC7B,EAAD,UACGgB,EAAY0B,KAAI,SAAAC,GACf,OACE,SAACzC,EAAD,WACE,UAAC,KAAD,CAAS0C,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAMzB,GAA1C,UACGqB,EAAKK,MADR,KACiBL,EAAKM,aAAaC,MAAM,EAAG,GAD5C,QAKL,MAED,SAIX,C,mMClFYC,EAAU,mCACVC,EAAW,gCCGjB,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGAEGC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sCAAmDD,EAAnD,OAFH,cACCI,EADD,yBAIEA,EAAS5B,MAJX,kEAQA,SAAeF,EAAtB,kC,aAAO,O,oBAAA,WAAyBZ,GAAzB,uFAEGyC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iCAA8CD,EAA9C,yBAAsEtC,EAAtE,OAFH,cACC0C,EADD,yBAIEA,EAAS5B,MAJX,kEAQA,SAAe6B,EAAtB,kC,aAAO,O,oBAAA,WAA4BX,GAA5B,uFACkBS,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BP,EAA/B,oBAA6CM,EAA7C,OADlB,cACCI,EADD,yBAGEA,EAAS5B,MAHX,kEAOA,SAAe8B,EAAtB,kC,aAAO,O,oBAAA,WAAuBZ,GAAvB,uFAEGS,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BP,EAA/B,4BAAqDM,EAArD,OAFH,cACCI,EADD,yBAIEA,EAAS5B,MAJX,kEAQA,SAAe+B,EAAtB,+CAAO,OAAP,oBAAO,WAA0Bb,GAA1B,uFAEGS,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BP,EAA/B,4BAAqDM,EAArD,OAFH,cACCI,EADD,yBAIEA,EAAS5B,MAJX,kE","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/baseURL.js","services/getFetch.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchFilmsList = styled.ul`\n  padding: 15px;\n  margin-left: 45px;\n  gap: 10px;\n  margin-bottom: 65px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n`;\n\nexport const SearchFilmsItem = styled.li`\n  width: 30%;\n  background-image: linear-gradient(to right, #54b3d6, #54b3d6 50%, #000 50%);\n  background-size: 200% 100%;\n  background-position: -100%;\n  display: inline-block;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  padding: 5px 0;\n  position: relative;\n  transition: all 0.3s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-position: 0;\n  }\n\n  &:before {\n    content: '';\n    background: #54b3d6;\n    display: block;\n    position: absolute;\n    bottom: -3px;\n    left: 0;\n    width: 0;\n    height: 3px;\n    transition: all 0.3s ease-in-out;\n  }\n\n  &:hover::before {\n    width: 100%;\n  }\n`;\n\nexport const FormButton = styled.button`\n  padding: 15px;\n  font-size: 16px;\n  color: #382aff;\n  border: 0px;\n  background-color: #ffaebb;\n  border-radius: 8px;\n  margin-left: 15px;\n  font-weight: 800;\n  cursor: pointer;\n`;\n\nexport const Form = styled.form`\n  margin-left: 55px;\n  margin-top: 25px;\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const FormInput = styled.input`\n  width: 30%;\n  position: relative;\n  font-size: 1.5em;\n  background: linear-gradient(101deg, #fff, #a8daf7);\n  padding: 5px;\n  display: inline-block;\n  border-color: #a8daf7;\n  border-radius: 8px;\n  *:not(span) {\n    position: relative;\n    display: inherit;\n    border-radius: inherit;\n    margin: 0;\n    border: none;\n    outline: none;\n    padding: 0 0.325em;\n    z-index: 1;\n    &:focus + span {\n      opacity: 1;\n      transform: scale(1);\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, NavLink, useLocation } from 'react-router-dom';\nimport { getMovies } from '../../services/getFetch';\nimport {\n  SearchFilmsList,\n  SearchFilmsItem,\n  FormButton,\n  Form,\n  FormInput,\n} from './Movies.styled';\n\nimport Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  width: '550px',\n  position: 'center-top',\n  distance: '100px',\n  timeout: 2000,\n  fontSize: '20px',\n});\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [listOfFilms, setListOfFilms] = useState([]);\n  const [flag, setFlag] = useState(false);\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  const formSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.query.value });\n    e.target.reset();\n  };\n\n  useEffect(() => {\n    function getListOfMovies() {\n      getMovies(query)\n        .then(data => {\n          setListOfFilms(data.results);\n          setFlag(true);\n          if (data.results.length > 0) {\n            Notiflix.Notify.success(\n              `We have found the movies most relevant to your request`\n            );\n          } else {\n            Notiflix.Notify.failure(\n              'Sorry, but nothing was found for your query'\n            );\n          }\n        })\n        .catch(err => {\n          Notiflix.Notify.failure(err);\n        });\n    }\n    if (query) {\n      getListOfMovies();\n    }\n  }, [query]);\n\n  return (\n    <div>\n      <Form onSubmit={formSubmit}>\n        <FormInput autoComplete=\"off\" name=\"query\" type=\"text\" autoFocus />\n        <FormButton type=\"submit\">Search</FormButton>\n      </Form>\n\n      <div>\n        {(flag && listOfFilms.length) > 0 ? (\n          <SearchFilmsList>\n            {listOfFilms.map(film => {\n              return (\n                <SearchFilmsItem>\n                  <NavLink to={`${film.id}`} state={{ from: location }}>\n                    {film.title} ({film.release_date.slice(0, 4)})\n                  </NavLink>\n                </SearchFilmsItem>\n              );\n            })}\n          </SearchFilmsList>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","export const KEY_API = 'db72402e2e89e57b99e88c265b440972';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n","import axios from 'axios';\nimport { KEY_API, BASE_URL } from './baseURL';\n\n// *************GET POPULAR MOVIES****************\nexport async function getPopularFilms() {\n  const response =\n    await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY_API}\n`);\n  return response.data;\n}\n\n// *************GET BY USER PARAMS****************\nexport async function getMovies(searchParams) {\n  const response =\n    await axios.get(`${BASE_URL}/search/movie?api_key=${KEY_API}&page=1&query=${searchParams}\n`);\n  return response.data;\n}\n\n// *************GET BY ID****************\nexport async function getMovieById(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY_API}\n`);\n  return response.data;\n}\n\n// *************GET CAST****************\nexport async function getCast(id) {\n  const response =\n    await axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${KEY_API}\n`);\n  return response.data;\n}\n\n// *************GET REVIEWS ****************\nexport async function getReviews(id) {\n  const response =\n    await axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY_API}\n`);\n  return response.data;\n}\n"],"names":["SearchFilmsList","styled","SearchFilmsItem","FormButton","Form","FormInput","Notiflix","width","position","distance","timeout","fontSize","useSearchParams","searchParams","setSearchParams","useState","listOfFilms","setListOfFilms","flag","setFlag","query","get","location","useLocation","useEffect","getMovies","then","data","results","length","catch","err","onSubmit","e","preventDefault","target","value","reset","autoComplete","name","type","autoFocus","map","film","to","id","state","from","title","release_date","slice","KEY_API","BASE_URL","getPopularFilms","axios","response","getMovieById","getCast","getReviews"],"sourceRoot":""}